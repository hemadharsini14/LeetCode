class Solution {
    public String replaceWords(List<String> dictionary, String sentence) {
        String word[] = sentence.split(" ");
        //ArrayList<String>arr = new ArrayList<>();
        LinkedHashMap<String,ArrayList<String>>map = new LinkedHashMap<>();
        String res = "";
        for(int i=0;i<word.length;i++)
        {
            String w = word[i];
            map.put(w,new ArrayList<String>());
            ArrayList<String>arr = map.get(w);
            for(String a:dictionary)
            {
                
                if(w.length()>=a.length())
                {
                    if(w.substring(0,a.length()).equals(a))
                    {
                        arr.add(a);
                    }
                }
            }
            map.put(w,arr);
        }
        for(Map.Entry m: map.entrySet())
        {
            String key = (String)m.getKey();
            ArrayList<String>arr =(ArrayList<String>)m.getValue();
            //System.out.print(key+" key ");
            for(int i=0;i<arr.size();i++)
            {
                System.out.print(arr.get(i)+" ");
            }
            System.out.println();
        }
        for(int i=0;i<word.length;i++)
        {
            if(map.containsKey(word[i]))
            {
                ArrayList<String>arr = ( ArrayList<String>)map.get(word[i]);
                if(arr.size()>0)
                {
                    String small_word ="";
                    int small_len = Integer.MAX_VALUE;
                    for(String a:arr)
                    {
                        if(small_len>a.length())
                        {
                            small_word = a;
                            small_len = a.length();
                        }
                    }
                    res = res+small_word+" ";
                    word[i] = small_word;
                    
                }
                else
                {
                    res = res+word[i]+" ";
                    
                }
            }
        }
        //return String.valueOf(word);
        //return sentence;
        return res.trim();
        //return word.toString();
        
    }
}
